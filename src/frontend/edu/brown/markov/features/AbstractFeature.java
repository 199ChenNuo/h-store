package edu.brown.markov.features;

import java.util.regex.Pattern;

import org.voltdb.catalog.ProcParameter;
import org.voltdb.catalog.Procedure;

import edu.brown.markov.FeatureSet;
import edu.brown.utils.PartitionEstimator;
import edu.brown.workload.TransactionTrace;

public abstract class AbstractFeature {

    private final static String DELIMITER = "-";
    private final static Pattern PREFIX_SPLITTER = Pattern.compile(DELIMITER);
    private final static String PREFIX_FORMAT = "%s" + DELIMITER + "%02d";
    
    protected final PartitionEstimator p_estimator;
    protected final Procedure catalog_proc;
    protected final String prefix;
    protected final Class<? extends AbstractFeature> feature_class;
    
    /**
     * Constructor
     * @param p_estimator
     * @param catalog_proc
     * @param feature_class
     */
    protected AbstractFeature(PartitionEstimator p_estimator, Procedure catalog_proc, Class<? extends AbstractFeature> feature_class) {
        this.p_estimator = p_estimator;
        this.catalog_proc = catalog_proc;
        this.feature_class = feature_class;
        this.prefix = AbstractFeature.getFeatureKeyPrefix(this.feature_class);
    }

    /**
     * For the given TransactionTrace object, generate the set of features that we 
     * extract from the ProcParameters 
     * @param txn_trace
     * @return
     * @throws Exception
     */
    public abstract void calculate(FeatureSet fset, TransactionTrace txn_trace) throws Exception;
    
    /**
     * Return the prefix that will be used for all attributes generated by the given Feature class
     * @param feature_class
     * @return
     */
    public static final String getFeatureKeyPrefix(Class<? extends AbstractFeature> feature_class) {
        String prefix = feature_class.getSimpleName(); 
        return (prefix.substring(0, prefix.length() - "Feature".length()));
    }
    
    
    public static final String getFeatureKeyPrefix(String feature_key) {
        return (PREFIX_SPLITTER.split(feature_key, 1)[0]);
    }
    
    /**
     * 
     * @return
     */
    public String getFeatureKey() {
        return (this.prefix);
    }
    
    /**
     * 
     * @param catalog_param
     * @return
     */
    public String getFeatureKey(ProcParameter catalog_param) {
        return (String.format(PREFIX_FORMAT, this.prefix, catalog_param.getIndex()));
    }

    public String getFeatureKey(ProcParameter catalog_param, int idx) {
        return (String.format(PREFIX_FORMAT, this.getFeatureKey(catalog_param), idx));
    }

}
