diff --git a/buildrules b/buildrules
--- a/buildrules
+++ b/buildrules
@@ -7,7 +7,7 @@
 
     # Grab the dependency data from GCC
     # TODO: Remove the protobuf include hack when adding include rules
-    command = ('gcc', '-D_EVENT_HAVE_CONFIG_H',
+    command = ('/usr/bin/gcc44', '-D_EVENT_HAVE_CONFIG_H',
             '-I' + SOURCEROOT, '-I' + SOURCEROOT + '/build', '-isystem' + SOURCEROOT + '/third_party/protobuf/src',
             '-MM', inputs[0])
     process = subprocess.Popen(command, stdout=subprocess.PIPE)
@@ -31,7 +31,7 @@
 
 # -Wshadow is disabled due to warnings in boost and the standard library :(
 # -Wfloat-equal is disabled due to warnings in tpcc unit tests
-BASE_WARNINGS = '-Wall -Wextra -Werror -Wformat-y2k -Wformat-nonliteral -Wformat-security -Wmissing-include-dirs -Wswitch-enum -Winit-self -Wundef -Wpointer-arith -Wcast-align -Wlogical-op -Wredundant-decls -Winvalid-pch -Wwrite-strings -Wno-sign-compare -Wno-unused-parameter'
+BASE_WARNINGS = '-Wall -Wextra -Werror -Wformat-y2k -Wformat-nonliteral -Wformat-security -Wmissing-include-dirs -Wswitch-enum -Winit-self -Wundef -Wpointer-arith -Wcast-align -Wredundant-decls -Winvalid-pch -Wwrite-strings -Wno-sign-compare -Wno-unused-parameter'
 C_WARNINGS = '-Wbad-function-cast -Wstrict-prototypes -Wnested-externs'
 # -Wconversion is a CPP warning because there were too many implicit conversions in libevent
 CPP_WARNINGS = '-Woverloaded-virtual -Wconversion'
@@ -44,7 +44,7 @@
     assert len(outputs) == 1
     assert outputs[0].endswith('.o')
 
-    return 'gcc -g -D_EVENT_HAVE_CONFIG_H ' + BASE_WARNINGS + ' ' + C_WARNINGS + ' -o ' + outputs[0] + ' -c ' + inputs[0] + ' -I' + SOURCEROOT
+    return '/usr/bin/gcc44 -g -D_EVENT_HAVE_CONFIG_H ' + BASE_WARNINGS + ' ' + C_WARNINGS + ' -o ' + outputs[0] + ' -c ' + inputs[0] + ' -I' + SOURCEROOT
     #return 'gcc -DNDEBUG -O3 -g -D_EVENT_HAVE_CONFIG_H ' + BASE_WARNINGS + ' ' + C_WARNINGS + ' -o ' + outputs[0] + ' -c ' + inputs[0] + ' -I' + SOURCEROOT
 
 
@@ -57,7 +57,7 @@
     OPTION_FLAGS = ''
     if 'FLAGS' in options:
         OPTION_FLAGS = ' ' + options['FLAGS']
-    return ('gcc -g -D_EVENT_HAVE_CONFIG_H ' + BASE_WARNINGS + ' ' + CPP_WARNINGS
+    return ('/usr/bin/gcc44 -g -D_EVENT_HAVE_CONFIG_H ' + BASE_WARNINGS + ' ' + CPP_WARNINGS
     #return ('gcc -DNDEBUG -O3 -g -D_EVENT_HAVE_CONFIG_H ' + BASE_WARNINGS + ' ' + CPP_WARNINGS
             + ' -o ' + outputs[0] + ' -c ' + inputs[0]
             + ' -I' + SOURCEROOT  + ' -I' + SOURCEROOT + '/build'
@@ -82,7 +82,7 @@
     assert len(outputs) == 1
 
     # TODO: Figure out a way to specify system libraries
-    return 'g++ -o ' + outputs[0] + ' ' + ' '.join(inputs) + ' -lrt'
+    return '/usr/bin/g++44 -o ' + outputs[0] + ' ' + ' '.join(inputs) + ' -lrt'
 
 
 def ProtoBuild(input, output, options):
diff --git a/third_party/protobuf/buildrules b/third_party/protobuf/buildrules
--- a/third_party/protobuf/buildrules
+++ b/third_party/protobuf/buildrules
@@ -2,6 +2,6 @@
     import os.path
     out_dir = os.path.dirname(output[0])
     configure_script = os.path.splitext(input[0])[0]
-    return "cd %s; %s --disable-shared; make -j 3; ln -f src/.libs/libprotobuf.a libprotobuf.a; ln -f src/protoc protoc" % (out_dir, configure_script)
+    return "cd %s; %s --disable-shared; make -j 3; cp -vr src/.libs/libprotobuf.a libprotobuf.a; cp -vr src/protoc protoc" % (out_dir, configure_script)
 
 rules = [(["configure.ac"], ["libprotobuf.a"], BuildProject, None)]
